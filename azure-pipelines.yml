trigger:
- master

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: '58dd4450-eb19-4b8e-94e8-ad4089283faf'
  imageRepository: 'josselardinoisdependencycheckapi'
  containerRegistry: 'codecheckregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/DependencyCheckAPI/Dockerfile'
  tag: '$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: BuildDockerImage
  displayName: Build and push Docker image
  jobs:
  - job: BuildDockerImage
    displayName: Build and push Docker image
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

- stage: BuildDotNetApp
  displayName: Build and test ASP.NET Core projects
  jobs:
  - job: BuildDotNetApp
    displayName: Build and test ASP.NET Core projects
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
